trigger:
  branches:
    include:
      - main
    exclude:
      - development
      - feature/*

pool:
  name: 'musafir-agent-pool-dt'

variables:
  - group: AWS-Credentials
  - name: AWS_REGION
    value: 'ap-south-1'
  - name: AWS_ACCOUNT_ID
    value: '713881790687'
  - name: ECR_REPO_NAME
    value: 'mu-frontend-jett-trips'
  - name: IMAGE_TAG
    value: $(Environment)-$(Build.BuildId)
  - name: Environment
    value: 'qa'
  - name: ECS_CLUSTER_NAME
    value: 'mbiz-jett-ui'   
  - name: ECS_SERVICE_NAME
    value: 'mbiz-jett-ui-trips-service-ushvjx7k' 
  - name: ECS_TASK_NAME
    value: 'mbiz-jett-ui-trips'

stages:
- stage: BuildAndPush
  displayName: Build and Push Docker Image
  jobs:
    - job: Build
      steps:
        - checkout: self
          clean: true

        - task: UseNode@1
          inputs:
            version: '20.x'

        - script: |
            echo "Authenticating to AWS ECR..."
            export AWS_ACCESS_KEY_ID=$(AWS_ACCESS_KEY_ID)
            export AWS_SECRET_ACCESS_KEY=$(AWS_SECRET_ACCESS_KEY)
            export AWS_REGION=$(AWS_REGION)
            aws ecr get-login-password --region $(AWS_REGION) | docker login --username AWS --password-stdin $(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com
          displayName: 'Authenticate with ECR'

        - script: |
            echo "Building Docker Image..."
            cd $(Build.SourcesDirectory)
            docker build -t $(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com/$(ECR_REPO_NAME):$(IMAGE_TAG) .
          displayName: 'Build Docker Image'

        - script: |
            echo "Pushing Docker Image..."
            docker push $(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com/$(ECR_REPO_NAME):$(IMAGE_TAG)
          displayName: 'Push Docker Image to ECR'

        - script: |
            echo "Removing Docker image from server..."
            docker rmi $(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com/$(ECR_REPO):$(IMAGE_TAG) || true
            echo "Removing dangling Docker images..."
            docker image prune -f
          displayName: Remove Docker Images and Dangling Layers
          

- stage: Deploy
  displayName: Deploy to ECS
  dependsOn: BuildAndPush
  condition: succeeded()
  jobs:
  - job: DeployToECS
    displayName: Register Task Definition and Update ECS Service

    steps:
    - script: |
        IMAGE_URI=$(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com/$(ECR_REPO_NAME):$(IMAGE_TAG)
        echo "Replacing <IMAGE_URI> with actual image: $IMAGE_URI"
        sed "s|<IMAGE_URI>|$IMAGE_URI|g" Musafir.JEET.TAAS.Task.Definition/jett.taas.trips.ui-task-def.json > rendered-task-def.json
      displayName: Substitute Image in Task Definition

    - script: |
        echo "Registering new task definition..."
        aws ecs register-task-definition \
          --cli-input-json file://rendered-task-def.json
      displayName: Register ECS Task

    - script: |
        echo "Updating ECS service with latest task definition..."
        TASK_NAME=$(ECS_TASK_NAME)
        SERVICE_NAME=$(ECS_SERVICE_NAME)
        CLUSTER_NAME=$(ECS_CLUSTER_NAME)

        REVISION=$(aws ecs describe-task-definition \
            --task-definition $TASK_NAME \
            --query 'taskDefinition.revision' \
            --output text)

        aws ecs update-service \
            --cluster $CLUSTER_NAME \
            --service $SERVICE_NAME \
            --task-definition ${TASK_NAME}:${REVISION}

        echo "Waiting for ECS service to become stable..."
        aws ecs wait services-stable \
            --cluster $CLUSTER_NAME \
            --services $SERVICE_NAME
      displayName: Update ECS Service 